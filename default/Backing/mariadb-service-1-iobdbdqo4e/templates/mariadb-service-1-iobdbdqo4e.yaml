apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ default "mariadb" .Values.statefulset.name }}
  namespace: {{ .Values.namespace }}
imagePullSecrets:
  - name: turaco-harbor-registry
---
apiVersion: v1
type: Opaque
kind: Secret
metadata:
  name: {{ .Values.mariadb.secret.name }}
  namespace: {{ .Values.namespace }}
data:
  root_password: {{ .Values.mariadb.secret.root_password | toString | b64enc | quote }}
  username: {{ .Values.mariadb.secret.username | toString | b64enc | quote }}
  password: {{ .Values.mariadb.secret.password | toString | b64enc | quote }}
  database: {{ .Values.mariadb.secret.database | toString | b64enc | quote }}
  dbhost: {{ .Values.mariadb.secret.dbhost | toString | b64enc | quote }}
  port: {{ .Values.mariadb.secret.port | toString | b64enc | quote }}
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ default "mariadb" .Values.statefulset.name }}
  namespace: {{ .Values.namespace }}
spec:
  serviceName: {{ default "mariadb" .Values.statefulset.spec.servicename }}
  selector:
    matchLabels:
      app: {{ default "mariadb" .Values.statefulset.name }}
  replicas: {{ .Values.statefulset.replicas }}
  template:
    metadata:
      labels:
        app: {{ default "mariadb" .Values.statefulset.name }}
      annotations:
        prometheus.io/path: "/actuator/prometheus"
        prometheus.io/port: "9090"
        prometheus.io/scheme: "http"
        prometheus.io/scrape: "true"
    spec:
      serviceAccountName: {{ default "mariadb" .Values.statefulset.name }}
      containers:
      - name: {{ default "mariadb" .Values.statefulset.name }}
        image: {{ .Values.mariadb.statefulset.image.url }}
        resources:
          requests:
            memory: {{ .Values.statefulset.resource.request.memory }}
            cpu: {{ .Values.statefulset.resource.request.cpu }}
          {{- if and (ne .Values.statefulset.resource.limits.memory "0Mi") (ne .Values.statefulset.resource.limits.memory "0Gi") }}
          limits:
            memory: {{ .Values.statefulset.resource.limits.memory }}
            cpu: {{ .Values.statefulset.resource.limits.cpu }}
          {{- end }}
        env:
        - name: MYSQL_HOST
          valueFrom:
            secretKeyRef:
              name: {{ .Values.mariadb.secret.name }}
              key: dbhost
        - name: MYSQL_PORT
          valueFrom:
            secretKeyRef:
              name: {{ .Values.mariadb.secret.name }}
              key: port
        - name: MYSQL_DATABASE
          valueFrom:
            secretKeyRef:
              name: {{ .Values.mariadb.secret.name }}
              key: database
        - name: MYSQL_USER
          valueFrom:
            secretKeyRef:
              name: {{ .Values.mariadb.secret.name }}
              key: username
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Values.mariadb.secret.name }}
              key: root_password
        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Values.mariadb.secret.name }}
              key: password
        - name: MYSQL_ROOT_HOST
          value: '%'
        ports:
          - containerPort: {{ default "3306" .Values.statefulset.container.port }}
            protocol: TCP          
        volumeMounts:
        - name: {{ default "pvc-mariadb-data" .Values.pvc.name }}
          mountPath: /var/lib/mariadb/{{ .Values.statefulset.name }}
        - name: {{ default "mariadb-config" .Values.mariadb.configmap.name }}
          mountPath: /etc/mariadb/conf.d/additional.cnf
          subPath: config
      volumes:
      - name: {{ default "mariadb-config" .Values.mariadb.configmap.name }}
        configMap:
          name: {{ default "mariadb-config" .Values.mariadb.configmap.name }}
  volumeClaimTemplates:
    - metadata:
        name: {{ default "pvc-mariadb-data" .Values.pvc.name }}
        annotations:
          volume.beta.kubernetes.io/storage-class: "{{ .Values.pvc.storageClass }}"      
      spec:
        accessModes: [ "{{ .Values.pvc.accessMode }}" ]
        resources:
          requests:
            storage: {{ .Values.pvc.size }}
